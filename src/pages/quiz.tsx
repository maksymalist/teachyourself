import { type NextPage } from "next";
import { useSession } from "next-auth/react";
import Head from "next/head";
import Image from "next/image";
import { useState } from "react";
import questions from "../../learner_quiz.json";

type Answer = {
  index: number;
  answer: string;
};

const Quiz: NextPage = () => {
  const { data: session, status } = useSession();
  const [progress, setProgress] = useState<number>(0);
  const [currentQuestion, setCurrentQuestion] = useState<number>(0);
  const key = Object.keys(questions)[currentQuestion];

  const [nextDisabled, setNextDisabled] = useState<boolean>(true);
  const [selectedAnswer, setSelectedAnswer] = useState<string>("");

  const [answers, setAnswers] = useState<Answer[]>([]);

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <header className="bg-white p-4">
        <div className="flex items-center justify-between border-2 border-black py-8 shadow-brutalist-4">
          <div />
          <h1 className="text-md font-bold md:text-3xl lg:text-5xl">
            Learning style quiz üìù
          </h1>
          <div className="mr-4 rounded-full border-4 border-brutal-blue shadow-brutalist-4">
            <Image
              width={32}
              height={32}
              src={session?.user?.image || ""}
              className="rounded-full lg:h-12 lg:w-12"
              alt=""
            />
          </div>
        </div>
      </header>
      <main className="p-4">
        <section className="mt-2">
          <div className="flex flex-row items-center">
            <div className="h-6s w-full rounded-full bg-gray-200 dark:bg-gray-700">
              <div
                className="h-6 rounded-full bg-brutal-green"
                style={{
                  width: `${progress * 10}%`,
                }}
              ></div>
            </div>
            <div className="ml-4 flex flex-row">
              <svg
                width="24"
                height="24"
                viewBox="0 0 24 24"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path d="M3 3H23.4V23.4H3V3Z" fill="black" />
                <path
                  fill-rule="evenodd"
                  clip-rule="evenodd"
                  d="M2.40002 3.00002C2.40002 2.66865 2.66865 2.40002 3.00002 2.40002H23.4C23.7314 2.40002 24 2.66865 24 3.00002V23.4C24 23.7314 23.7314 24 23.4 24H3.00002C2.66865 24 2.40002 23.7314 2.40002 23.4V3.00002ZM3.60002 3.60002V22.8H22.8V3.60002H3.60002Z"
                  fill="black"
                />
                <path
                  d="M0.599976 0.599976H21V21H0.599976V0.599976Z"
                  fill="#00FF75"
                />
                <path
                  fill-rule="evenodd"
                  clip-rule="evenodd"
                  d="M0 0.6C0 0.268629 0.268629 0 0.6 0H21C21.3314 0 21.6 0.268629 21.6 0.6V21C21.6 21.3314 21.3314 21.6 21 21.6H0.6C0.268629 21.6 0 21.3314 0 21V0.6ZM1.2 1.2V20.4H20.4V1.2H1.2Z"
                  fill="black"
                />
                <path
                  fill-rule="evenodd"
                  clip-rule="evenodd"
                  d="M10.2 12.7029L16.5515 6.3514L18.2485 8.04846L10.2 16.097L4.55148 10.4485L6.24854 8.7514L10.2 12.7029Z"
                  fill="black"
                />
              </svg>
              <span className="ml-2">{progress}/10</span>
            </div>
          </div>
          <div className="mt-4 h-[1px] w-full bg-slate-400" />
        </section>
        <section className="mt-6">
          <div className="flex justify-center">
            <h1 className="text-3xl">
              {currentQuestion + 1}. {key}
            </h1>
          </div>
        </section>
        <section className="mt-6">
          <div className="flex justify-center">
            <div className="flex w-full max-w-lg flex-row flex-wrap justify-center">
              {selectedAnswer === "A" ? (
                <button
                  className="m-2 rounded-lg border-2 border-black bg-brutal-red p-4 text-white opacity-50 shadow-brutalist-4"
                  onClick={() => {
                    setNextDisabled(false);
                    setSelectedAnswer("A");
                  }}
                >
                  {questions[key as string]["A"]}
                </button>
              ) : (
                <button
                  className="m-2 rounded-lg border-2 border-black bg-brutal-red p-4 text-white shadow-brutalist-4"
                  onClick={() => {
                    setNextDisabled(false);
                    setSelectedAnswer("A");
                  }}
                >
                  {questions[key as string]["A"]}
                </button>
              )}

              {selectedAnswer === "B" ? (
                <button
                  className="m-2 rounded-lg border-2 border-black bg-brutal-orange p-4 text-white opacity-50 shadow-brutalist-4"
                  onClick={() => {
                    setNextDisabled(false);
                    setSelectedAnswer("B");
                  }}
                >
                  {questions[key as string]["B"]}
                </button>
              ) : (
                <button
                  className="m-2 rounded-lg border-2 border-black bg-brutal-orange p-4 text-white shadow-brutalist-4"
                  onClick={() => {
                    setNextDisabled(false);
                    setSelectedAnswer("B");
                  }}
                >
                  {questions[key as string]["B"]}
                </button>
              )}

              {selectedAnswer === "C" ? (
                <button
                  className="m-2 rounded-lg border-2 border-black bg-brutal-blue p-4 text-white opacity-50 shadow-brutalist-4"
                  onClick={() => {
                    setNextDisabled(false);
                    setSelectedAnswer("C");
                  }}
                >
                  {questions[key]["C"]}
                </button>
              ) : (
                <button
                  className="m-2 rounded-lg border-2 border-black bg-brutal-blue p-4 text-white shadow-brutalist-4"
                  onClick={() => {
                    setNextDisabled(false);
                    setSelectedAnswer("C");
                  }}
                >
                  {questions[key]["C"]}
                </button>
              )}
            </div>
          </div>
        </section>
        <section className="absolute bottom-2 right-2 md:bottom-4 md:right-4 lg:bottom-8 lg:right-8">
          <div className="flex justify-end">
            <button
              className="w-32 rounded-lg border-2 border-black bg-brutal-purple p-4 font-bold text-white shadow-brutalist-4"
              style={{
                opacity: nextDisabled ? 0.5 : 1,
              }}
              onClick={() => {
                setAnswers([
                  ...answers,
                  {
                    index: currentQuestion,
                    answer: selectedAnswer,
                  },
                ]);
                setCurrentQuestion(currentQuestion + 1);
                setProgress(progress + 1);
                setNextDisabled(true);
                setSelectedAnswer("");
              }}
            >
              Next üöÄ
            </button>
          </div>
        </section>
      </main>
    </>
  );
};

export default Quiz;
